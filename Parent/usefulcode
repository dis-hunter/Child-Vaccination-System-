/*
  document.querySelector("form").addEventListener("submit", function(event) {
    event.preventDefault(); // Prevent form from submitting and reloading the page
    searchBar();  // Call your async function
  });

  async function searchBar() {
    const storedLocalId = localStorage.getItem('localId');
    console.log("Stored Local ID:", storedLocalId);

    const parentName = document.getElementById('searchQuery').value;  // Get the parent name from the input field
    console.log(parentName);

    try {
      // Define the API URL and include the ParentName as a query parameter
      const url = `http://127.0.0.1:5000/childDetails?ParentName=${encodeURIComponent(parentName)}`;

      // Send a GET request to the backend
      const response = await fetch(url, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',  // You can keep headers if needed
        }
      });

      // Process the response
      const data = await response.json();

      if (response.ok) {
        console.log('Children found:', data);  // Log child names in the console

        // Call a function to update the DOM with the list of children
        displayChildren(data.children); // Assuming the children are in `data.children`
      } else {
        console.error('Error fetching child details:', data.error || response.statusText);
      }
    } catch (error) {
      console.error('Error:', error);
    }
  }

  // Function to dynamically update the DOM with the children- not yet donee
  function displayChildren(children) {
    const childrenList = document.querySelector('.children ul');
    childrenList.innerHTML = '';  // Clear the list first

    // Loop through the children array and create list items for each child
    children.forEach(child => {
      const listItem = document.createElement('li');
      listItem.textContent = child.ChildName;  // Assuming each child object has a 'ChildName' property
      childrenList.appendChild(listItem);
    });
  }
  async function ParentDetails() {

    const localId=getParentDetails();

    if (!localId) {
      return; // Exit if localId is not found
    }

    try {
      // Define the API URL and include the ParentName as a query parameter
      const url = `http://127.0.0.1:5000/childDetails?ParentName=${encodeURIComponent(localId)}`;

      // Send a GET request to the backend (no body needed for GET requests)
      const response = await fetch(url, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',  // You can keep headers if needed
        }
      });

      // Process the response
      const data = await response.json();

      if (response.ok) {
        console.log('Children found:', data);  // Log child names in the console
      } else {
        console.error('Error fetching child details:', data.error || response.statusText);    }
    } catch (error) {
      console.error('Error:', error);
    }
  }

  async function getParentDetails()
  {
    function getLocalIdFromUrl() {
      const urlParams = new URLSearchParams(window.location.search);
      return urlParams.get('localId'); // Change 'localId' to whatever the parameter name is
    }

    // Extract the localId
    const localId = getLocalIdFromUrl();

    if (!localId) {
      console.error("localId not found in URL");
      return; // Exit the function if localId is not found
    }
    console.log(localId);
    return localId;
  }
  // document.addEventListener('DOMContentLoaded', () => {
  //  ParentDetails();  // Call the function when the DOM is fully loaded
  // });
  */

